<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/v3/metric_service.proto

namespace Google\Monitoring\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * The `ListTimeSeries` request.
 * </pre>
 *
 * Protobuf type <code>google.monitoring.v3.ListTimeSeriesRequest</code>
 */
class ListTimeSeriesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The project on which to execute the request. The format is
     * "projects/{project_id_or_number}".
     * </pre>
     *
     * <code>string name = 10;</code>
     */
    private $name = '';
    /**
     * <pre>
     * A [monitoring filter](/monitoring/api/v3/filters) that specifies which time
     * series should be returned.  The filter must specify a single metric type,
     * and can additionally specify metric labels and other information. For
     * example:
     *     metric.type = "compute.googleapis.com/instance/cpu/usage_time" AND
     *         metric.label.instance_name = "my-instance-name"
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    private $filter = '';
    /**
     * <pre>
     * The time interval for which results should be returned. Only time series
     * that contain data points in the specified interval are included
     * in the response.
     * </pre>
     *
     * <code>.google.monitoring.v3.TimeInterval interval = 4;</code>
     */
    private $interval = null;
    /**
     * <pre>
     * By default, the raw time series data is returned.
     * Use this field to combine multiple time series for different
     * views of the data.
     * </pre>
     *
     * <code>.google.monitoring.v3.Aggregation aggregation = 5;</code>
     */
    private $aggregation = null;
    /**
     * <pre>
     * Specifies the order in which the points of the time series should
     * be returned.  By default, results are not ordered.  Currently,
     * this field must be left blank.
     * </pre>
     *
     * <code>string order_by = 6;</code>
     */
    private $order_by = '';
    /**
     * <pre>
     * Specifies which information is returned about the time series.
     * </pre>
     *
     * <code>.google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;</code>
     */
    private $view = 0;
    /**
     * <pre>
     * A positive number that is the maximum number of results to return.
     * When `view` field sets to `FULL`, it limits the number of `Points` server
     * will return; if `view` field is `HEADERS`, it limits the number of
     * `TimeSeries` server will return.
     * </pre>
     *
     * <code>int32 page_size = 8;</code>
     */
    private $page_size = 0;
    /**
     * <pre>
     * If this field is not empty then it must contain the `nextPageToken` value
     * returned by a previous call to this method.  Using this field causes the
     * method to return additional results from the previous method call.
     * </pre>
     *
     * <code>string page_token = 9;</code>
     */
    private $page_token = '';

    public function __construct() {
        \GPBMetadata\Google\Monitoring\V3\MetricService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The project on which to execute the request. The format is
     * "projects/{project_id_or_number}".
     * </pre>
     *
     * <code>string name = 10;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * The project on which to execute the request. The format is
     * "projects/{project_id_or_number}".
     * </pre>
     *
     * <code>string name = 10;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * A [monitoring filter](/monitoring/api/v3/filters) that specifies which time
     * series should be returned.  The filter must specify a single metric type,
     * and can additionally specify metric labels and other information. For
     * example:
     *     metric.type = "compute.googleapis.com/instance/cpu/usage_time" AND
     *         metric.label.instance_name = "my-instance-name"
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * <pre>
     * A [monitoring filter](/monitoring/api/v3/filters) that specifies which time
     * series should be returned.  The filter must specify a single metric type,
     * and can additionally specify metric labels and other information. For
     * example:
     *     metric.type = "compute.googleapis.com/instance/cpu/usage_time" AND
     *         metric.label.instance_name = "my-instance-name"
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;
    }

    /**
     * <pre>
     * The time interval for which results should be returned. Only time series
     * that contain data points in the specified interval are included
     * in the response.
     * </pre>
     *
     * <code>.google.monitoring.v3.TimeInterval interval = 4;</code>
     */
    public function getInterval()
    {
        return $this->interval;
    }

    /**
     * <pre>
     * The time interval for which results should be returned. Only time series
     * that contain data points in the specified interval are included
     * in the response.
     * </pre>
     *
     * <code>.google.monitoring.v3.TimeInterval interval = 4;</code>
     */
    public function setInterval(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Monitoring\V3\TimeInterval::class);
        $this->interval = $var;
    }

    /**
     * <pre>
     * By default, the raw time series data is returned.
     * Use this field to combine multiple time series for different
     * views of the data.
     * </pre>
     *
     * <code>.google.monitoring.v3.Aggregation aggregation = 5;</code>
     */
    public function getAggregation()
    {
        return $this->aggregation;
    }

    /**
     * <pre>
     * By default, the raw time series data is returned.
     * Use this field to combine multiple time series for different
     * views of the data.
     * </pre>
     *
     * <code>.google.monitoring.v3.Aggregation aggregation = 5;</code>
     */
    public function setAggregation(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Monitoring\V3\Aggregation::class);
        $this->aggregation = $var;
    }

    /**
     * <pre>
     * Specifies the order in which the points of the time series should
     * be returned.  By default, results are not ordered.  Currently,
     * this field must be left blank.
     * </pre>
     *
     * <code>string order_by = 6;</code>
     */
    public function getOrderBy()
    {
        return $this->order_by;
    }

    /**
     * <pre>
     * Specifies the order in which the points of the time series should
     * be returned.  By default, results are not ordered.  Currently,
     * this field must be left blank.
     * </pre>
     *
     * <code>string order_by = 6;</code>
     */
    public function setOrderBy($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_by = $var;
    }

    /**
     * <pre>
     * Specifies which information is returned about the time series.
     * </pre>
     *
     * <code>.google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;</code>
     */
    public function getView()
    {
        return $this->view;
    }

    /**
     * <pre>
     * Specifies which information is returned about the time series.
     * </pre>
     *
     * <code>.google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;</code>
     */
    public function setView($var)
    {
        GPBUtil::checkEnum($var, \Google\Monitoring\V3\ListTimeSeriesRequest_TimeSeriesView::class);
        $this->view = $var;
    }

    /**
     * <pre>
     * A positive number that is the maximum number of results to return.
     * When `view` field sets to `FULL`, it limits the number of `Points` server
     * will return; if `view` field is `HEADERS`, it limits the number of
     * `TimeSeries` server will return.
     * </pre>
     *
     * <code>int32 page_size = 8;</code>
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * <pre>
     * A positive number that is the maximum number of results to return.
     * When `view` field sets to `FULL`, it limits the number of `Points` server
     * will return; if `view` field is `HEADERS`, it limits the number of
     * `TimeSeries` server will return.
     * </pre>
     *
     * <code>int32 page_size = 8;</code>
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;
    }

    /**
     * <pre>
     * If this field is not empty then it must contain the `nextPageToken` value
     * returned by a previous call to this method.  Using this field causes the
     * method to return additional results from the previous method call.
     * </pre>
     *
     * <code>string page_token = 9;</code>
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * <pre>
     * If this field is not empty then it must contain the `nextPageToken` value
     * returned by a previous call to this method.  Using this field causes the
     * method to return additional results from the previous method call.
     * </pre>
     *
     * <code>string page_token = 9;</code>
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;
    }

}

