<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/v3/group_service.proto

namespace Google\Monitoring\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * The `ListGroup` request.
 * </pre>
 *
 * Protobuf type <code>google.monitoring.v3.ListGroupsRequest</code>
 */
class ListGroupsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The project whose groups are to be listed. The format is
     * `"projects/{project_id_or_number}"`.
     * </pre>
     *
     * <code>string name = 7;</code>
     */
    private $name = '';
    /**
     * <pre>
     * A positive number that is the maximum number of results to return.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     */
    private $page_size = 0;
    /**
     * <pre>
     * If this field is not empty then it must contain the `nextPageToken` value
     * returned by a previous call to this method.  Using this field causes the
     * method to return additional results from the previous method call.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     */
    private $page_token = '';
    protected $filter;

    public function __construct() {
        \GPBMetadata\Google\Monitoring\V3\GroupService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The project whose groups are to be listed. The format is
     * `"projects/{project_id_or_number}"`.
     * </pre>
     *
     * <code>string name = 7;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * The project whose groups are to be listed. The format is
     * `"projects/{project_id_or_number}"`.
     * </pre>
     *
     * <code>string name = 7;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * A group name: `"projects/{project_id_or_number}/groups/{group_id}"`.
     * Returns groups whose `parentName` field contains the group
     * name.  If no groups have this parent, the results are empty.
     * </pre>
     *
     * <code>string children_of_group = 2;</code>
     */
    public function getChildrenOfGroup()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * A group name: `"projects/{project_id_or_number}/groups/{group_id}"`.
     * Returns groups whose `parentName` field contains the group
     * name.  If no groups have this parent, the results are empty.
     * </pre>
     *
     * <code>string children_of_group = 2;</code>
     */
    public function setChildrenOfGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * A group name: `"projects/{project_id_or_number}/groups/{group_id}"`.
     * Returns groups that are ancestors of the specified group.
     * The groups are returned in order, starting with the immediate parent and
     * ending with the most distant ancestor.  If the specified group has no
     * immediate parent, the results are empty.
     * </pre>
     *
     * <code>string ancestors_of_group = 3;</code>
     */
    public function getAncestorsOfGroup()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * A group name: `"projects/{project_id_or_number}/groups/{group_id}"`.
     * Returns groups that are ancestors of the specified group.
     * The groups are returned in order, starting with the immediate parent and
     * ending with the most distant ancestor.  If the specified group has no
     * immediate parent, the results are empty.
     * </pre>
     *
     * <code>string ancestors_of_group = 3;</code>
     */
    public function setAncestorsOfGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);
    }

    /**
     * <pre>
     * A group name: `"projects/{project_id_or_number}/groups/{group_id}"`.
     * Returns the descendants of the specified group.  This is a superset of
     * the results returned by the `childrenOfGroup` filter, and includes
     * children-of-children, and so forth.
     * </pre>
     *
     * <code>string descendants_of_group = 4;</code>
     */
    public function getDescendantsOfGroup()
    {
        return $this->readOneof(4);
    }

    /**
     * <pre>
     * A group name: `"projects/{project_id_or_number}/groups/{group_id}"`.
     * Returns the descendants of the specified group.  This is a superset of
     * the results returned by the `childrenOfGroup` filter, and includes
     * children-of-children, and so forth.
     * </pre>
     *
     * <code>string descendants_of_group = 4;</code>
     */
    public function setDescendantsOfGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(4, $var);
    }

    /**
     * <pre>
     * A positive number that is the maximum number of results to return.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * <pre>
     * A positive number that is the maximum number of results to return.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;
    }

    /**
     * <pre>
     * If this field is not empty then it must contain the `nextPageToken` value
     * returned by a previous call to this method.  Using this field causes the
     * method to return additional results from the previous method call.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * <pre>
     * If this field is not empty then it must contain the `nextPageToken` value
     * returned by a previous call to this method.  Using this field causes the
     * method to return additional results from the previous method call.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;
    }

    public function getFilter()
    {
        return $this->whichOneof("filter");
    }

}

