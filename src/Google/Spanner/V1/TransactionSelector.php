<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/v1/transaction.proto

namespace Google\Spanner\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * This message is used to select the transaction in which a
 * [Read][google.spanner.v1.Spanner.Read] or
 * [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] call runs.
 * See [TransactionOptions][google.spanner.v1.TransactionOptions] for more information about transactions.
 * </pre>
 *
 * Protobuf type <code>google.spanner.v1.TransactionSelector</code>
 */
class TransactionSelector extends \Google\Protobuf\Internal\Message
{
    protected $selector;

    public function __construct() {
        \GPBMetadata\Google\Spanner\V1\Transaction::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Execute the read or SQL query in a temporary transaction.
     * This is the most efficient way to execute a transaction that
     * consists of a single SQL query.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionOptions single_use = 1;</code>
     */
    public function getSingleUse()
    {
        return $this->readOneof(1);
    }

    /**
     * <pre>
     * Execute the read or SQL query in a temporary transaction.
     * This is the most efficient way to execute a transaction that
     * consists of a single SQL query.
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionOptions single_use = 1;</code>
     */
    public function setSingleUse(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Spanner\V1\TransactionOptions::class);
        $this->writeOneof(1, $var);
    }

    /**
     * <pre>
     * Execute the read or SQL query in a previously-started transaction.
     * </pre>
     *
     * <code>bytes id = 2;</code>
     */
    public function getId()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * Execute the read or SQL query in a previously-started transaction.
     * </pre>
     *
     * <code>bytes id = 2;</code>
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * Begin a new transaction and execute this read or SQL query in
     * it. The transaction ID of the new transaction is returned in
     * [ResultSetMetadata.transaction][google.spanner.v1.ResultSetMetadata.transaction], which is a [Transaction][google.spanner.v1.Transaction].
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionOptions begin = 3;</code>
     */
    public function getBegin()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * Begin a new transaction and execute this read or SQL query in
     * it. The transaction ID of the new transaction is returned in
     * [ResultSetMetadata.transaction][google.spanner.v1.ResultSetMetadata.transaction], which is a [Transaction][google.spanner.v1.Transaction].
     * </pre>
     *
     * <code>.google.spanner.v1.TransactionOptions begin = 3;</code>
     */
    public function setBegin(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Spanner\V1\TransactionOptions::class);
        $this->writeOneof(3, $var);
    }

    public function getSelector()
    {
        return $this->whichOneof("selector");
    }

}

