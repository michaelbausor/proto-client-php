<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/iam/admin/v1/iam.proto

namespace Google\Iam\Admin\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A role in the Identity and Access Management API.
 * </pre>
 *
 * Protobuf type <code>google.iam.admin.v1.Role</code>
 */
class Role extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The name of the role.
     * When Role is used in CreateRole, the role name must not be set.
     * When Role is used in output and other input such as UpdateRole, the role
     * name is the complete path, e.g., roles/logging.viewer for curated roles
     * and organizations/{organization-id}/roles/logging.viewer for custom roles.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <pre>
     * Optional.  A human-readable title for the role.  Typically this
     * is limited to 100 UTF-8 bytes.
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    private $title = '';
    /**
     * <pre>
     * Optional.  A human-readable description for the role.
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    private $description = '';

    public function __construct() {
        \GPBMetadata\Google\Iam\Admin\V1\Iam::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The name of the role.
     * When Role is used in CreateRole, the role name must not be set.
     * When Role is used in output and other input such as UpdateRole, the role
     * name is the complete path, e.g., roles/logging.viewer for curated roles
     * and organizations/{organization-id}/roles/logging.viewer for custom roles.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * The name of the role.
     * When Role is used in CreateRole, the role name must not be set.
     * When Role is used in output and other input such as UpdateRole, the role
     * name is the complete path, e.g., roles/logging.viewer for curated roles
     * and organizations/{organization-id}/roles/logging.viewer for custom roles.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * Optional.  A human-readable title for the role.  Typically this
     * is limited to 100 UTF-8 bytes.
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * <pre>
     * Optional.  A human-readable title for the role.  Typically this
     * is limited to 100 UTF-8 bytes.
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    public function setTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->title = $var;
    }

    /**
     * <pre>
     * Optional.  A human-readable description for the role.
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * Optional.  A human-readable description for the role.
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

}

