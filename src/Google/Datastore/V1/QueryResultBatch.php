<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/datastore/v1/query.proto

namespace Google\Datastore\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A batch of results produced by a query.
 * </pre>
 *
 * Protobuf type <code>google.datastore.v1.QueryResultBatch</code>
 */
class QueryResultBatch extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The number of results skipped, typically because of an offset.
     * </pre>
     *
     * <code>int32 skipped_results = 6;</code>
     */
    private $skipped_results = 0;
    /**
     * <pre>
     * A cursor that points to the position after the last skipped result.
     * Will be set when `skipped_results` != 0.
     * </pre>
     *
     * <code>bytes skipped_cursor = 3;</code>
     */
    private $skipped_cursor = '';
    /**
     * <pre>
     * The result type for every entity in `entity_results`.
     * </pre>
     *
     * <code>.google.datastore.v1.EntityResult.ResultType entity_result_type = 1;</code>
     */
    private $entity_result_type = 0;
    /**
     * <pre>
     * The results for this batch.
     * </pre>
     *
     * <code>repeated .google.datastore.v1.EntityResult entity_results = 2;</code>
     */
    private $entity_results;
    /**
     * <pre>
     * A cursor that points to the position after the last result in the batch.
     * </pre>
     *
     * <code>bytes end_cursor = 4;</code>
     */
    private $end_cursor = '';
    /**
     * <pre>
     * The state of the query after the current batch.
     * </pre>
     *
     * <code>.google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;</code>
     */
    private $more_results = 0;
    /**
     * <pre>
     * The version number of the snapshot this batch was returned from.
     * This applies to the range of results from the query's `start_cursor` (or
     * the beginning of the query if no cursor was given) to this batch's
     * `end_cursor` (not the query's `end_cursor`).
     * In a single transaction, subsequent query result batches for the same query
     * can have a greater snapshot version number. Each batch's snapshot version
     * is valid for all preceding batches.
     * The value will be zero for eventually consistent queries.
     * </pre>
     *
     * <code>int64 snapshot_version = 7;</code>
     */
    private $snapshot_version = 0;

    public function __construct() {
        \GPBMetadata\Google\Datastore\V1\Query::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The number of results skipped, typically because of an offset.
     * </pre>
     *
     * <code>int32 skipped_results = 6;</code>
     */
    public function getSkippedResults()
    {
        return $this->skipped_results;
    }

    /**
     * <pre>
     * The number of results skipped, typically because of an offset.
     * </pre>
     *
     * <code>int32 skipped_results = 6;</code>
     */
    public function setSkippedResults($var)
    {
        GPBUtil::checkInt32($var);
        $this->skipped_results = $var;
    }

    /**
     * <pre>
     * A cursor that points to the position after the last skipped result.
     * Will be set when `skipped_results` != 0.
     * </pre>
     *
     * <code>bytes skipped_cursor = 3;</code>
     */
    public function getSkippedCursor()
    {
        return $this->skipped_cursor;
    }

    /**
     * <pre>
     * A cursor that points to the position after the last skipped result.
     * Will be set when `skipped_results` != 0.
     * </pre>
     *
     * <code>bytes skipped_cursor = 3;</code>
     */
    public function setSkippedCursor($var)
    {
        GPBUtil::checkString($var, False);
        $this->skipped_cursor = $var;
    }

    /**
     * <pre>
     * The result type for every entity in `entity_results`.
     * </pre>
     *
     * <code>.google.datastore.v1.EntityResult.ResultType entity_result_type = 1;</code>
     */
    public function getEntityResultType()
    {
        return $this->entity_result_type;
    }

    /**
     * <pre>
     * The result type for every entity in `entity_results`.
     * </pre>
     *
     * <code>.google.datastore.v1.EntityResult.ResultType entity_result_type = 1;</code>
     */
    public function setEntityResultType($var)
    {
        GPBUtil::checkEnum($var, \Google\Datastore\V1\EntityResult_ResultType::class);
        $this->entity_result_type = $var;
    }

    /**
     * <pre>
     * The results for this batch.
     * </pre>
     *
     * <code>repeated .google.datastore.v1.EntityResult entity_results = 2;</code>
     */
    public function getEntityResults()
    {
        return $this->entity_results;
    }

    /**
     * <pre>
     * The results for this batch.
     * </pre>
     *
     * <code>repeated .google.datastore.v1.EntityResult entity_results = 2;</code>
     */
    public function setEntityResults(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Datastore\V1\EntityResult::class);
        $this->entity_results = $arr;
    }

    /**
     * <pre>
     * A cursor that points to the position after the last result in the batch.
     * </pre>
     *
     * <code>bytes end_cursor = 4;</code>
     */
    public function getEndCursor()
    {
        return $this->end_cursor;
    }

    /**
     * <pre>
     * A cursor that points to the position after the last result in the batch.
     * </pre>
     *
     * <code>bytes end_cursor = 4;</code>
     */
    public function setEndCursor($var)
    {
        GPBUtil::checkString($var, False);
        $this->end_cursor = $var;
    }

    /**
     * <pre>
     * The state of the query after the current batch.
     * </pre>
     *
     * <code>.google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;</code>
     */
    public function getMoreResults()
    {
        return $this->more_results;
    }

    /**
     * <pre>
     * The state of the query after the current batch.
     * </pre>
     *
     * <code>.google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;</code>
     */
    public function setMoreResults($var)
    {
        GPBUtil::checkEnum($var, \Google\Datastore\V1\QueryResultBatch_MoreResultsType::class);
        $this->more_results = $var;
    }

    /**
     * <pre>
     * The version number of the snapshot this batch was returned from.
     * This applies to the range of results from the query's `start_cursor` (or
     * the beginning of the query if no cursor was given) to this batch's
     * `end_cursor` (not the query's `end_cursor`).
     * In a single transaction, subsequent query result batches for the same query
     * can have a greater snapshot version number. Each batch's snapshot version
     * is valid for all preceding batches.
     * The value will be zero for eventually consistent queries.
     * </pre>
     *
     * <code>int64 snapshot_version = 7;</code>
     */
    public function getSnapshotVersion()
    {
        return $this->snapshot_version;
    }

    /**
     * <pre>
     * The version number of the snapshot this batch was returned from.
     * This applies to the range of results from the query's `start_cursor` (or
     * the beginning of the query if no cursor was given) to this batch's
     * `end_cursor` (not the query's `end_cursor`).
     * In a single transaction, subsequent query result batches for the same query
     * can have a greater snapshot version number. Each batch's snapshot version
     * is valid for all preceding batches.
     * The value will be zero for eventually consistent queries.
     * </pre>
     *
     * <code>int64 snapshot_version = 7;</code>
     */
    public function setSnapshotVersion($var)
    {
        GPBUtil::checkInt64($var);
        $this->snapshot_version = $var;
    }

}

