<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/datastore/v1/query.proto

namespace Google\Datastore\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * The result of fetching an entity from Datastore.
 * </pre>
 *
 * Protobuf type <code>google.datastore.v1.EntityResult</code>
 */
class EntityResult extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The resulting entity.
     * </pre>
     *
     * <code>.google.datastore.v1.Entity entity = 1;</code>
     */
    private $entity = null;
    /**
     * <pre>
     * The version of the entity, a strictly positive number that monotonically
     * increases with changes to the entity.
     * This field is set for [`FULL`][google.datastore.v1.EntityResult.ResultType.FULL] entity
     * results.
     * For [missing][google.datastore.v1.LookupResponse.missing] entities in `LookupResponse`, this
     * is the version of the snapshot that was used to look up the entity, and it
     * is always set except for eventually consistent reads.
     * </pre>
     *
     * <code>int64 version = 4;</code>
     */
    private $version = 0;
    /**
     * <pre>
     * A cursor that points to the position after the result entity.
     * Set only when the `EntityResult` is part of a `QueryResultBatch` message.
     * </pre>
     *
     * <code>bytes cursor = 3;</code>
     */
    private $cursor = '';

    public function __construct() {
        \GPBMetadata\Google\Datastore\V1\Query::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The resulting entity.
     * </pre>
     *
     * <code>.google.datastore.v1.Entity entity = 1;</code>
     */
    public function getEntity()
    {
        return $this->entity;
    }

    /**
     * <pre>
     * The resulting entity.
     * </pre>
     *
     * <code>.google.datastore.v1.Entity entity = 1;</code>
     */
    public function setEntity(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Datastore\V1\Entity::class);
        $this->entity = $var;
    }

    /**
     * <pre>
     * The version of the entity, a strictly positive number that monotonically
     * increases with changes to the entity.
     * This field is set for [`FULL`][google.datastore.v1.EntityResult.ResultType.FULL] entity
     * results.
     * For [missing][google.datastore.v1.LookupResponse.missing] entities in `LookupResponse`, this
     * is the version of the snapshot that was used to look up the entity, and it
     * is always set except for eventually consistent reads.
     * </pre>
     *
     * <code>int64 version = 4;</code>
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * <pre>
     * The version of the entity, a strictly positive number that monotonically
     * increases with changes to the entity.
     * This field is set for [`FULL`][google.datastore.v1.EntityResult.ResultType.FULL] entity
     * results.
     * For [missing][google.datastore.v1.LookupResponse.missing] entities in `LookupResponse`, this
     * is the version of the snapshot that was used to look up the entity, and it
     * is always set except for eventually consistent reads.
     * </pre>
     *
     * <code>int64 version = 4;</code>
     */
    public function setVersion($var)
    {
        GPBUtil::checkInt64($var);
        $this->version = $var;
    }

    /**
     * <pre>
     * A cursor that points to the position after the result entity.
     * Set only when the `EntityResult` is part of a `QueryResultBatch` message.
     * </pre>
     *
     * <code>bytes cursor = 3;</code>
     */
    public function getCursor()
    {
        return $this->cursor;
    }

    /**
     * <pre>
     * A cursor that points to the position after the result entity.
     * Set only when the `EntityResult` is part of a `QueryResultBatch` message.
     * </pre>
     *
     * <code>bytes cursor = 3;</code>
     */
    public function setCursor($var)
    {
        GPBUtil::checkString($var, False);
        $this->cursor = $var;
    }

}

