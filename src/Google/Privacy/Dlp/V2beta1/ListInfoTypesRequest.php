<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta1/dlp.proto

namespace Google\Privacy\Dlp\V2beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Request for the list of info types belonging to a given category,
 * or all supported info types if no category is specified.
 * </pre>
 *
 * Protobuf type <code>google.privacy.dlp.v2beta1.ListInfoTypesRequest</code>
 */
class ListInfoTypesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Category name as returned by ListRootCategories.
     * </pre>
     *
     * <code>string category = 1;</code>
     */
    private $category = '';
    /**
     * <pre>
     * Optional BCP-47 language code for localized info type friendly
     * names. If omitted, or if localized strings are not available,
     * en-US strings will be returned.
     * </pre>
     *
     * <code>string language_code = 2;</code>
     */
    private $language_code = '';

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta1\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Category name as returned by ListRootCategories.
     * </pre>
     *
     * <code>string category = 1;</code>
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * <pre>
     * Category name as returned by ListRootCategories.
     * </pre>
     *
     * <code>string category = 1;</code>
     */
    public function setCategory($var)
    {
        GPBUtil::checkString($var, True);
        $this->category = $var;
    }

    /**
     * <pre>
     * Optional BCP-47 language code for localized info type friendly
     * names. If omitted, or if localized strings are not available,
     * en-US strings will be returned.
     * </pre>
     *
     * <code>string language_code = 2;</code>
     */
    public function getLanguageCode()
    {
        return $this->language_code;
    }

    /**
     * <pre>
     * Optional BCP-47 language code for localized info type friendly
     * names. If omitted, or if localized strings are not available,
     * en-US strings will be returned.
     * </pre>
     *
     * <code>string language_code = 2;</code>
     */
    public function setLanguageCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->language_code = $var;
    }

}

