<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta1/dlp.proto

namespace Google\Privacy\Dlp\V2beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>google.privacy.dlp.v2beta1.RedactContentRequest.ReplaceConfig</code>
 */
class RedactContentRequest_ReplaceConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Type of information to replace. Only one ReplaceConfig per info_type
     * should be provided. If ReplaceConfig does not have an info_type, we'll
     * match it against all info_types that are found but not specified in
     * another ReplaceConfig.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    private $info_type = null;
    /**
     * <pre>
     * Content replacing sensitive information of given type. Max 256 chars.
     * </pre>
     *
     * <code>string replace_with = 2;</code>
     */
    private $replace_with = '';

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta1\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Type of information to replace. Only one ReplaceConfig per info_type
     * should be provided. If ReplaceConfig does not have an info_type, we'll
     * match it against all info_types that are found but not specified in
     * another ReplaceConfig.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public function getInfoType()
    {
        return $this->info_type;
    }

    /**
     * <pre>
     * Type of information to replace. Only one ReplaceConfig per info_type
     * should be provided. If ReplaceConfig does not have an info_type, we'll
     * match it against all info_types that are found but not specified in
     * another ReplaceConfig.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public function setInfoType(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Privacy\Dlp\V2beta1\InfoType::class);
        $this->info_type = $var;
    }

    /**
     * <pre>
     * Content replacing sensitive information of given type. Max 256 chars.
     * </pre>
     *
     * <code>string replace_with = 2;</code>
     */
    public function getReplaceWith()
    {
        return $this->replace_with;
    }

    /**
     * <pre>
     * Content replacing sensitive information of given type. Max 256 chars.
     * </pre>
     *
     * <code>string replace_with = 2;</code>
     */
    public function setReplaceWith($var)
    {
        GPBUtil::checkString($var, True);
        $this->replace_with = $var;
    }

}

