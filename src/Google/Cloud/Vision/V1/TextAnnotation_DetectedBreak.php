<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vision/v1/text_annotation.proto

namespace Google\Cloud\Vision\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Detected start or end of a structural component.
 * </pre>
 *
 * Protobuf type <code>google.cloud.vision.v1.TextAnnotation.DetectedBreak</code>
 */
class TextAnnotation_DetectedBreak extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;</code>
     */
    private $type = 0;
    /**
     * <pre>
     * True if break prepends the element.
     * </pre>
     *
     * <code>bool is_prefix = 2;</code>
     */
    private $is_prefix = false;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Vision\V1\TextAnnotation::initOnce();
        parent::__construct();
    }

    /**
     * <code>.google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <code>.google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Vision\V1\TextAnnotation_DetectedBreak_BreakType::class);
        $this->type = $var;
    }

    /**
     * <pre>
     * True if break prepends the element.
     * </pre>
     *
     * <code>bool is_prefix = 2;</code>
     */
    public function getIsPrefix()
    {
        return $this->is_prefix;
    }

    /**
     * <pre>
     * True if break prepends the element.
     * </pre>
     *
     * <code>bool is_prefix = 2;</code>
     */
    public function setIsPrefix($var)
    {
        GPBUtil::checkBool($var);
        $this->is_prefix = $var;
    }

}

