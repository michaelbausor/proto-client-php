<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vision/v1/image_annotator.proto

namespace Google\Cloud\Vision\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Client image to perform Google Cloud Vision API tasks over.
 * </pre>
 *
 * Protobuf type <code>google.cloud.vision.v1.Image</code>
 */
class Image extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Image content, represented as a stream of bytes.
     * Note: as with all `bytes` fields, protobuffers use a pure binary
     * representation, whereas JSON representations use base64.
     * </pre>
     *
     * <code>bytes content = 1;</code>
     */
    private $content = '';
    /**
     * <pre>
     * Google Cloud Storage image location. If both `content` and `source`
     * are provided for an image, `content` takes precedence and is
     * used to perform the image annotation request.
     * </pre>
     *
     * <code>.google.cloud.vision.v1.ImageSource source = 2;</code>
     */
    private $source = null;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Vision\V1\ImageAnnotator::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Image content, represented as a stream of bytes.
     * Note: as with all `bytes` fields, protobuffers use a pure binary
     * representation, whereas JSON representations use base64.
     * </pre>
     *
     * <code>bytes content = 1;</code>
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * <pre>
     * Image content, represented as a stream of bytes.
     * Note: as with all `bytes` fields, protobuffers use a pure binary
     * representation, whereas JSON representations use base64.
     * </pre>
     *
     * <code>bytes content = 1;</code>
     */
    public function setContent($var)
    {
        GPBUtil::checkString($var, False);
        $this->content = $var;
    }

    /**
     * <pre>
     * Google Cloud Storage image location. If both `content` and `source`
     * are provided for an image, `content` takes precedence and is
     * used to perform the image annotation request.
     * </pre>
     *
     * <code>.google.cloud.vision.v1.ImageSource source = 2;</code>
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * <pre>
     * Google Cloud Storage image location. If both `content` and `source`
     * are provided for an image, `content` takes precedence and is
     * used to perform the image annotation request.
     * </pre>
     *
     * <code>.google.cloud.vision.v1.ImageSource source = 2;</code>
     */
    public function setSource(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Vision\V1\ImageSource::class);
        $this->source = $var;
    }

}

