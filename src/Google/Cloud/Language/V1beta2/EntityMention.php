<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/language/v1beta2/language_service.proto

namespace Google\Cloud\Language\V1beta2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Represents a mention for an entity in the text. Currently, proper noun
 * mentions are supported.
 * </pre>
 *
 * Protobuf type <code>google.cloud.language.v1beta2.EntityMention</code>
 */
class EntityMention extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The mention text.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.TextSpan text = 1;</code>
     */
    private $text = null;
    /**
     * <pre>
     * The type of the entity mention.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.EntityMention.Type type = 2;</code>
     */
    private $type = 0;
    /**
     * <pre>
     * For calls to [AnalyzeEntitySentiment][] or if
     * [AnnotateTextRequest.Features.extract_entity_sentiment][google.cloud.language.v1beta2.AnnotateTextRequest.Features.extract_entity_sentiment] is set to
     * true, this field will contain the sentiment expressed for this mention of
     * the entity in the provided document.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.Sentiment sentiment = 3;</code>
     */
    private $sentiment = null;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Language\V1Beta2\LanguageService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The mention text.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.TextSpan text = 1;</code>
     */
    public function getText()
    {
        return $this->text;
    }

    /**
     * <pre>
     * The mention text.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.TextSpan text = 1;</code>
     */
    public function setText(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Language\V1beta2\TextSpan::class);
        $this->text = $var;
    }

    /**
     * <pre>
     * The type of the entity mention.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.EntityMention.Type type = 2;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     * The type of the entity mention.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.EntityMention.Type type = 2;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Language\V1beta2\EntityMention_Type::class);
        $this->type = $var;
    }

    /**
     * <pre>
     * For calls to [AnalyzeEntitySentiment][] or if
     * [AnnotateTextRequest.Features.extract_entity_sentiment][google.cloud.language.v1beta2.AnnotateTextRequest.Features.extract_entity_sentiment] is set to
     * true, this field will contain the sentiment expressed for this mention of
     * the entity in the provided document.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.Sentiment sentiment = 3;</code>
     */
    public function getSentiment()
    {
        return $this->sentiment;
    }

    /**
     * <pre>
     * For calls to [AnalyzeEntitySentiment][] or if
     * [AnnotateTextRequest.Features.extract_entity_sentiment][google.cloud.language.v1beta2.AnnotateTextRequest.Features.extract_entity_sentiment] is set to
     * true, this field will contain the sentiment expressed for this mention of
     * the entity in the provided document.
     * </pre>
     *
     * <code>.google.cloud.language.v1beta2.Sentiment sentiment = 3;</code>
     */
    public function setSentiment(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Language\V1beta2\Sentiment::class);
        $this->sentiment = $var;
    }

}

