<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/logging/v2/log_entry.proto

namespace Google\Logging\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Additional information about a potentially long-running operation with which
 * a log entry is associated.
 * </pre>
 *
 * Protobuf type <code>google.logging.v2.LogEntryOperation</code>
 */
class LogEntryOperation extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Optional. An arbitrary operation identifier. Log entries with the
     * same identifier are assumed to be part of the same operation.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    private $id = '';
    /**
     * <pre>
     * Optional. An arbitrary producer identifier. The combination of
     * `id` and `producer` must be globally unique.  Examples for `producer`:
     * `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
     * </pre>
     *
     * <code>string producer = 2;</code>
     */
    private $producer = '';
    /**
     * <pre>
     * Optional. Set this to True if this is the first log entry in the operation.
     * </pre>
     *
     * <code>bool first = 3;</code>
     */
    private $first = false;
    /**
     * <pre>
     * Optional. Set this to True if this is the last log entry in the operation.
     * </pre>
     *
     * <code>bool last = 4;</code>
     */
    private $last = false;

    public function __construct() {
        \GPBMetadata\Google\Logging\V2\LogEntry::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Optional. An arbitrary operation identifier. Log entries with the
     * same identifier are assumed to be part of the same operation.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * <pre>
     * Optional. An arbitrary operation identifier. Log entries with the
     * same identifier are assumed to be part of the same operation.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;
    }

    /**
     * <pre>
     * Optional. An arbitrary producer identifier. The combination of
     * `id` and `producer` must be globally unique.  Examples for `producer`:
     * `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
     * </pre>
     *
     * <code>string producer = 2;</code>
     */
    public function getProducer()
    {
        return $this->producer;
    }

    /**
     * <pre>
     * Optional. An arbitrary producer identifier. The combination of
     * `id` and `producer` must be globally unique.  Examples for `producer`:
     * `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
     * </pre>
     *
     * <code>string producer = 2;</code>
     */
    public function setProducer($var)
    {
        GPBUtil::checkString($var, True);
        $this->producer = $var;
    }

    /**
     * <pre>
     * Optional. Set this to True if this is the first log entry in the operation.
     * </pre>
     *
     * <code>bool first = 3;</code>
     */
    public function getFirst()
    {
        return $this->first;
    }

    /**
     * <pre>
     * Optional. Set this to True if this is the first log entry in the operation.
     * </pre>
     *
     * <code>bool first = 3;</code>
     */
    public function setFirst($var)
    {
        GPBUtil::checkBool($var);
        $this->first = $var;
    }

    /**
     * <pre>
     * Optional. Set this to True if this is the last log entry in the operation.
     * </pre>
     *
     * <code>bool last = 4;</code>
     */
    public function getLast()
    {
        return $this->last;
    }

    /**
     * <pre>
     * Optional. Set this to True if this is the last log entry in the operation.
     * </pre>
     *
     * <code>bool last = 4;</code>
     */
    public function setLast($var)
    {
        GPBUtil::checkBool($var);
        $this->last = $var;
    }

}

