<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/servicecontrol/v1/check_error.proto

namespace Google\Api\Servicecontrol\V1;

/**
 * <pre>
 * Error codes for Check responses.
 * </pre>
 *
 * Protobuf enum <code>google.api.servicecontrol.v1.CheckError.Code</code>
 */
class CheckError_Code
{
    /**
     * <pre>
     * This is never used in `CheckResponse`.
     * </pre>
     *
     * <code>ERROR_CODE_UNSPECIFIED = 0;</code>
     */
    const ERROR_CODE_UNSPECIFIED = 0;
    /**
     * <pre>
     * The consumer's project id was not found.
     * Same as [google.rpc.Code.NOT_FOUND][].
     * </pre>
     *
     * <code>NOT_FOUND = 5;</code>
     */
    const NOT_FOUND = 5;
    /**
     * <pre>
     * The consumer doesn't have access to the specified resource.
     * Same as [google.rpc.Code.PERMISSION_DENIED][].
     * </pre>
     *
     * <code>PERMISSION_DENIED = 7;</code>
     */
    const PERMISSION_DENIED = 7;
    /**
     * <pre>
     * Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][].
     * </pre>
     *
     * <code>RESOURCE_EXHAUSTED = 8;</code>
     */
    const RESOURCE_EXHAUSTED = 8;
    /**
     * <pre>
     * The consumer hasn't activated the service.
     * </pre>
     *
     * <code>SERVICE_NOT_ACTIVATED = 104;</code>
     */
    const SERVICE_NOT_ACTIVATED = 104;
    /**
     * <pre>
     * The consumer cannot access the service because billing is disabled.
     * </pre>
     *
     * <code>BILLING_DISABLED = 107;</code>
     */
    const BILLING_DISABLED = 107;
    /**
     * <pre>
     * The consumer's project has been marked as deleted (soft deletion).
     * </pre>
     *
     * <code>PROJECT_DELETED = 108;</code>
     */
    const PROJECT_DELETED = 108;
    /**
     * <pre>
     * The consumer's project number or id does not represent a valid project.
     * </pre>
     *
     * <code>PROJECT_INVALID = 114;</code>
     */
    const PROJECT_INVALID = 114;
    /**
     * <pre>
     * The IP address of the consumer is invalid for the specific consumer
     * project.
     * </pre>
     *
     * <code>IP_ADDRESS_BLOCKED = 109;</code>
     */
    const IP_ADDRESS_BLOCKED = 109;
    /**
     * <pre>
     * The referer address of the consumer request is invalid for the specific
     * consumer project.
     * </pre>
     *
     * <code>REFERER_BLOCKED = 110;</code>
     */
    const REFERER_BLOCKED = 110;
    /**
     * <pre>
     * The client application of the consumer request is invalid for the
     * specific consumer project.
     * </pre>
     *
     * <code>CLIENT_APP_BLOCKED = 111;</code>
     */
    const CLIENT_APP_BLOCKED = 111;
    /**
     * <pre>
     * The consumer's API key is invalid.
     * </pre>
     *
     * <code>API_KEY_INVALID = 105;</code>
     */
    const API_KEY_INVALID = 105;
    /**
     * <pre>
     * The consumer's API Key has expired.
     * </pre>
     *
     * <code>API_KEY_EXPIRED = 112;</code>
     */
    const API_KEY_EXPIRED = 112;
    /**
     * <pre>
     * The consumer's API Key was not found in config record.
     * </pre>
     *
     * <code>API_KEY_NOT_FOUND = 113;</code>
     */
    const API_KEY_NOT_FOUND = 113;
    /**
     * <pre>
     * The backend server for looking up project id/number is unavailable.
     * </pre>
     *
     * <code>NAMESPACE_LOOKUP_UNAVAILABLE = 300;</code>
     */
    const NAMESPACE_LOOKUP_UNAVAILABLE = 300;
    /**
     * <pre>
     * The backend server for checking service status is unavailable.
     * </pre>
     *
     * <code>SERVICE_STATUS_UNAVAILABLE = 301;</code>
     */
    const SERVICE_STATUS_UNAVAILABLE = 301;
    /**
     * <pre>
     * The backend server for checking billing status is unavailable.
     * </pre>
     *
     * <code>BILLING_STATUS_UNAVAILABLE = 302;</code>
     */
    const BILLING_STATUS_UNAVAILABLE = 302;
}

